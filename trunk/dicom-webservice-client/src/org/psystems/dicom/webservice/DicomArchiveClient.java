/*
    WEB-DICOM - preserving and providing information to the DICOM devices
	
    Copyright (C) 2009-2010 psystems.org
    Copyright (C) 2009-2010 Dmitry Derenok 

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>
    
    The Original Code is part of WEB-DICOM, an implementation hosted at 
    <http://code.google.com/p/web-dicom/>
    
    In the project WEB-DICOM used the library open source project dcm4che
    The Original Code is part of dcm4che, an implementation of DICOM(TM) in
    Java(TM), hosted at http://sourceforge.net/projects/dcm4che.
    
    =======================================================================
    
    WEB-DICOM - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å DICOM —É—Å—Ç—Ä–æ–π—Å—Ç–≤

    Copyright (C) 2009-2010 psystems.org 
    Copyright (C) 2009-2010 Dmitry Derenok 

    –≠—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —è–≤–ª—è–µ—Ç—Å—è —Å–≤–æ–±–æ–¥–Ω—ã–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–º –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ–º. –í—ã –º–æ–∂–µ—Ç–µ 
    —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –∏/–∏–ª–∏ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –µ—ë —Å–æ–≥–ª–∞—Å–Ω–æ —É—Å–ª–æ–≤–∏—è–º –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π 
    –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –õ–∏—Ü–µ–Ω–∑–∏–∏ GNU, –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–π –§–æ–Ω–¥–æ–º –°–≤–æ–±–æ–¥–Ω–æ–≥–æ –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ 
    –û–±–µ—Å–ø–µ—á–µ–Ω–∏—è, –≤–µ—Ä—Å–∏–∏ 3 –∏–ª–∏, –ø–æ –í–∞—à–µ–º—É –∂–µ–ª–∞–Ω–∏—é, –ª—é–±–æ–π –±–æ–ª–µ–µ –ø–æ–∑–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏. 
    –≠—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –Ω–∞–¥–µ–∂–¥–µ, —á—Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–Ω–æ–π, –Ω–æ
    –ë–ï–ó –í–°–Ø–ö–ò–• –ì–ê–†–ê–ù–¢–ò–ô, –≤ —Ç–æ–º —á–∏—Å–ª–µ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ–º—ã—Ö –≥–∞—Ä–∞–Ω—Ç–∏–π –¢–û–í–ê–†–ù–û–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø –ü–†–ò 
    –ü–†–û–î–ê–ñ–ï –∏ –ì–û–î–ù–û–°–¢–ò –î–õ–Ø –û–ü–†–ï–î–ï–õ–Å–ù–ù–û–ì–û –ü–†–ò–ú–ï–ù–ï–ù–ò–Ø. –°–º–æ—Ç—Ä–∏—Ç–µ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é 
    –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—É—é –õ–∏—Ü–µ–Ω–∑–∏—é GNU –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. 
    –í—ã –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ø–∏—é –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –õ–∏—Ü–µ–Ω–∑–∏–∏ GNU –≤–º–µ—Å—Ç–µ 
    —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π. –í —Å–ª—É—á–∞–µ –µ—ë –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ <http://www.gnu.org/licenses/>
    –†—É—Å—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ <http://code.google.com/p/gpl3rus/wiki/LatestRelease>
    
    –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ WEB-DICOM –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞
    <http://code.google.com/p/web-dicom/>
    
    –í –ø—Ä–æ–µ–∫—Ç–µ WEB-DICOM –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ dcm4che/
    –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ dcm4che, –∏ –µ–≥–æ –∏–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ü–∏—è DICOM(TM) in
    Java(TM), –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–¥–µ—Å—å http://sourceforge.net/projects/dcm4che.
    
    
 */
package org.psystems.dicom.webservice;

import java.rmi.RemoteException;
import java.util.Calendar;

import org.apache.axis2.AxisFault;
import org.psystems.dicom.webservice.DicomArchiveStub.FindStudies;
import org.psystems.dicom.webservice.DicomArchiveStub.FindStudiesResponse;
import org.psystems.dicom.webservice.DicomArchiveStub.GetStudy;
import org.psystems.dicom.webservice.DicomArchiveStub.GetStudyResponse;
import org.psystems.dicom.webservice.DicomArchiveStub.NewStudy;
import org.psystems.dicom.webservice.DicomArchiveStub.NewStudyResponse;
import org.psystems.dicom.webservice.DicomArchiveStub.Study;

public class DicomArchiveClient {

	public static void main(String[] args) {
		try {

			testNewStudy();
			testGetStudy();
			findStudies();

			// DicomDBStub stub = new DicomDBStub();
			//                	
			//                	
			// DicomDBStub.GetStudy getstudy = new GetStudy();
			// getstudy.setI(11);
			// DicomDBStub.GetStudyResponse responce = stub.getStudy(getstudy);
			// Study result = responce.get_return();
			//                	
			// System.out.println("RESULT : "+result.getId()+" = "+result.getDescription());
			//					
			// DicomDBStub.FindStudies findstudies = new FindStudies();
			// findstudies.setS("ÔÓËÒÍ searche");
			// FindStudiesResponse responce1 = stub.findStudies(findstudies);
			// Study[] result1 = responce1.get_return();
			//					
			// for(int i = 0; i<result1.length; i++) {
			// System.out.println(" R : "+result1[i].getId() + " = " +
			// result1[i].getDescription());
			// }
			//					
			// DicomDBStub.StartTransaction transaction = new
			// StartTransaction();
			// Study sendedStudy = new Study();
			// sendedStudy.setId(333);
			// sendedStudy.setDescription("TTT “ÂÒÚ TTT");
			// transaction.setStudy(sendedStudy );
			// StartTransactionResponse transactionResponce =
			// stub.startTransaction(transaction);
			// int resultTrans = transactionResponce.get_return();
			// System.out.println("RESULT : "+resultTrans);
			//					

		} catch (AxisFault e) {
			e.printStackTrace();
		} catch (RemoteException e) {
			e.printStackTrace();
		}

	}
	
	private static void findStudies() throws AxisFault, RemoteException {

		DicomArchiveStub stub = new DicomArchiveStub();
		DicomArchiveStub.FindStudies studySearchedString = new FindStudies();
		studySearchedString.setS("ÒÚÓÍ‡ ÔÓËÒÍ‡");
		FindStudiesResponse responceOfSearcheStudies = stub.findStudies(studySearchedString);
		Study[] result = responceOfSearcheStudies.get_return();
		
		System.out.println("Finded Studies : " + result);
		 for(int i = 0; i<result.length; i++) {
			 printStudy(result[i]);
		 }
	}

	private static void testGetStudy() throws AxisFault, RemoteException {

		DicomArchiveStub stub = new DicomArchiveStub();
		DicomArchiveStub.GetStudy studySearchedId = new GetStudy();
		studySearchedId.setI(10);
		GetStudyResponse responceOfSearcheStudy = stub
				.getStudy(studySearchedId);
		Study findedStudy = responceOfSearcheStudy.get_return();
		printStudy(findedStudy);

	}

	

	private static void testNewStudy() throws AxisFault, RemoteException {
		DicomArchiveStub stub = new DicomArchiveStub();

		DicomArchiveStub.NewStudy newStudy = new NewStudy();
		newStudy.setPatient("»‚‡ÌÓ‚ »‚‡Ì");
		newStudy.setPatientDateBirthday(Calendar.getInstance());
		newStudy.setPatientId("»¬¿Õ123");
		newStudy.setPatientSex("M");
		newStudy.setStudyType("–ÂÌÚ„ÂÌÓ„‡ÙËˇ");

		NewStudyResponse responceOfNewStudy = stub.newStudy(newStudy);
		int newStudyId = responceOfNewStudy.get_return();
		System.out.println("newStudyId=" + newStudyId);
	}
	
	private static void printStudy(Study findedStudy) {
		System.out.println("findedStudy=" + findedStudy.getId() + ";"
				+ findedStudy.getStudyDescription() + ";"
				+ findedStudy.getStudyDevice() + ";"
				+ findedStudy.getStudyDoctor() + ";" + findedStudy.getStudyId()
				+ ";" + findedStudy.getStudyPatient() + ";"
				+ findedStudy.getStudyPatientId() + ";"
				+ findedStudy.getStudyResult() + ";"
				+ findedStudy.getStudyType() + ";" + findedStudy.getStudyUrl()
				+ ";" + findedStudy.getStudyDate());
	}
}
